#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.3074
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Database_fireworks_.Web
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.Runtime.Serialization;
	using System.ComponentModel;
	using System;
	
	
	[System.Data.Linq.Mapping.DatabaseAttribute(Name="NORTHWND")]
	public partial class DataClasses1DataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void Insertserverdb(serverdb instance);
    partial void Updateserverdb(serverdb instance);
    partial void Deleteserverdb(serverdb instance);
    partial void Inserttable_signup1(table_signup1 instance);
    partial void Updatetable_signup1(table_signup1 instance);
    partial void Deletetable_signup1(table_signup1 instance);
    #endregion
		
		public DataClasses1DataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["NORTHWNDConnectionString1"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<serverdb> serverdbs
		{
			get
			{
				return this.GetTable<serverdb>();
			}
		}
		
		public System.Data.Linq.Table<table_signup1> table_signup1s
		{
			get
			{
				return this.GetTable<table_signup1>();
			}
		}
	}
	
	[Table(Name="dbo.serverdb")]
	[DataContract()]
	public partial class serverdb : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Nullable<System.Guid> _uid;
		
		private string _username;
		
		private string _filename;
		
		private string _richtext;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnuidChanging(System.Nullable<System.Guid> value);
    partial void OnuidChanged();
    partial void OnusernameChanging(string value);
    partial void OnusernameChanged();
    partial void OnfilenameChanging(string value);
    partial void OnfilenameChanged();
    partial void OnrichtextChanging(string value);
    partial void OnrichtextChanged();
    #endregion
		
		public serverdb()
		{
			this.Initialize();
		}
		
		[Column(Storage="_uid", DbType="UniqueIdentifier", IsPrimaryKey=true)]
		[DataMember(Order=1)]
		public System.Nullable<System.Guid> uid
		{
			get
			{
				return this._uid;
			}
			set
			{
				if ((this._uid != value))
				{
					this.OnuidChanging(value);
					this.SendPropertyChanging();
					this._uid = value;
					this.SendPropertyChanged("uid");
					this.OnuidChanged();
				}
			}
		}
		
		[Column(Storage="_username", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		[DataMember(Order=2)]
		public string username
		{
			get
			{
				return this._username;
			}
			set
			{
				if ((this._username != value))
				{
					this.OnusernameChanging(value);
					this.SendPropertyChanging();
					this._username = value;
					this.SendPropertyChanged("username");
					this.OnusernameChanged();
				}
			}
		}
		
		[Column(Storage="_filename", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		[DataMember(Order=3)]
		public string filename
		{
			get
			{
				return this._filename;
			}
			set
			{
				if ((this._filename != value))
				{
					this.OnfilenameChanging(value);
					this.SendPropertyChanging();
					this._filename = value;
					this.SendPropertyChanged("filename");
					this.OnfilenameChanged();
				}
			}
		}
		
		[Column(Storage="_richtext", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		[DataMember(Order=4)]
		public string richtext
		{
			get
			{
				return this._richtext;
			}
			set
			{
				if ((this._richtext != value))
				{
					this.OnrichtextChanging(value);
					this.SendPropertyChanging();
					this._richtext = value;
					this.SendPropertyChanged("richtext");
					this.OnrichtextChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			OnCreated();
		}
		
		[OnDeserializing()]
		[System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[Table(Name="dbo.table_signup1")]
	[DataContract()]
	public partial class table_signup1 : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _user_id;
		
		private string _first_name;
		
		private string _last_name;
		
		private string _user_name;
		
		private string _address;
		
		private string _date_of_birth;
		
		private System.Nullable<int> _gender;
		
		private string _password;
		
		private string _primary_email;
		
		private string _alternate_email;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onuser_idChanging(System.Guid value);
    partial void Onuser_idChanged();
    partial void Onfirst_nameChanging(string value);
    partial void Onfirst_nameChanged();
    partial void Onlast_nameChanging(string value);
    partial void Onlast_nameChanged();
    partial void Onuser_nameChanging(string value);
    partial void Onuser_nameChanged();
    partial void OnaddressChanging(string value);
    partial void OnaddressChanged();
    partial void Ondate_of_birthChanging(string value);
    partial void Ondate_of_birthChanged();
    partial void OngenderChanging(System.Nullable<int> value);
    partial void OngenderChanged();
    partial void OnpasswordChanging(string value);
    partial void OnpasswordChanged();
    partial void Onprimary_emailChanging(string value);
    partial void Onprimary_emailChanged();
    partial void Onalternate_emailChanging(string value);
    partial void Onalternate_emailChanged();
    #endregion
		
		public table_signup1()
		{
			this.Initialize();
		}
		
		[Column(Storage="_user_id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		[DataMember(Order=1)]
		public System.Guid user_id
		{
			get
			{
				return this._user_id;
			}
			set
			{
				if ((this._user_id != value))
				{
					this.Onuser_idChanging(value);
					this.SendPropertyChanging();
					this._user_id = value;
					this.SendPropertyChanged("user_id");
					this.Onuser_idChanged();
				}
			}
		}
		
		[Column(Storage="_first_name", DbType="Text NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		[DataMember(Order=2)]
		public string first_name
		{
			get
			{
				return this._first_name;
			}
			set
			{
				if ((this._first_name != value))
				{
					this.Onfirst_nameChanging(value);
					this.SendPropertyChanging();
					this._first_name = value;
					this.SendPropertyChanged("first_name");
					this.Onfirst_nameChanged();
				}
			}
		}
		
		[Column(Storage="_last_name", DbType="Text NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		[DataMember(Order=3)]
		public string last_name
		{
			get
			{
				return this._last_name;
			}
			set
			{
				if ((this._last_name != value))
				{
					this.Onlast_nameChanging(value);
					this.SendPropertyChanging();
					this._last_name = value;
					this.SendPropertyChanged("last_name");
					this.Onlast_nameChanged();
				}
			}
		}
		
		[Column(Storage="_user_name", DbType="Text NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		[DataMember(Order=4)]
		public string user_name
		{
			get
			{
				return this._user_name;
			}
			set
			{
				if ((this._user_name != value))
				{
					this.Onuser_nameChanging(value);
					this.SendPropertyChanging();
					this._user_name = value;
					this.SendPropertyChanged("user_name");
					this.Onuser_nameChanged();
				}
			}
		}
		
		[Column(Storage="_address", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		[DataMember(Order=5)]
		public string address
		{
			get
			{
				return this._address;
			}
			set
			{
				if ((this._address != value))
				{
					this.OnaddressChanging(value);
					this.SendPropertyChanging();
					this._address = value;
					this.SendPropertyChanged("address");
					this.OnaddressChanged();
				}
			}
		}
		
		[Column(Storage="_date_of_birth", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		[DataMember(Order=6)]
		public string date_of_birth
		{
			get
			{
				return this._date_of_birth;
			}
			set
			{
				if ((this._date_of_birth != value))
				{
					this.Ondate_of_birthChanging(value);
					this.SendPropertyChanging();
					this._date_of_birth = value;
					this.SendPropertyChanged("date_of_birth");
					this.Ondate_of_birthChanged();
				}
			}
		}
		
		[Column(Storage="_gender", DbType="Int")]
		[DataMember(Order=7)]
		public System.Nullable<int> gender
		{
			get
			{
				return this._gender;
			}
			set
			{
				if ((this._gender != value))
				{
					this.OngenderChanging(value);
					this.SendPropertyChanging();
					this._gender = value;
					this.SendPropertyChanged("gender");
					this.OngenderChanged();
				}
			}
		}
		
		[Column(Storage="_password", DbType="Text NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		[DataMember(Order=8)]
		public string password
		{
			get
			{
				return this._password;
			}
			set
			{
				if ((this._password != value))
				{
					this.OnpasswordChanging(value);
					this.SendPropertyChanging();
					this._password = value;
					this.SendPropertyChanged("password");
					this.OnpasswordChanged();
				}
			}
		}
		
		[Column(Storage="_primary_email", DbType="Text NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		[DataMember(Order=9)]
		public string primary_email
		{
			get
			{
				return this._primary_email;
			}
			set
			{
				if ((this._primary_email != value))
				{
					this.Onprimary_emailChanging(value);
					this.SendPropertyChanging();
					this._primary_email = value;
					this.SendPropertyChanged("primary_email");
					this.Onprimary_emailChanged();
				}
			}
		}
		
		[Column(Storage="_alternate_email", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		[DataMember(Order=10)]
		public string alternate_email
		{
			get
			{
				return this._alternate_email;
			}
			set
			{
				if ((this._alternate_email != value))
				{
					this.Onalternate_emailChanging(value);
					this.SendPropertyChanging();
					this._alternate_email = value;
					this.SendPropertyChanged("alternate_email");
					this.Onalternate_emailChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			OnCreated();
		}
		
		[OnDeserializing()]
		[System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
}
#pragma warning restore 1591
